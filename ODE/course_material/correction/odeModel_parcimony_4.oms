// ODE parameters
val panic0 = Val[Double]
val staminaH = Val[Double]
val hunt0 = Val[Double]
val staminaZ = Val[Double]
val inf0 = Val[Double]
val out0 = Val[Double]
val fightback = Val[Double]
val die0 = Val[Double]

// Initial conditions
val statesInit = Val[Vector[Double]]

// Time steps
val tMax = Val[Int]

// Outputs
val humansWalking = Val[Array[Double]]
val humansRunning = Val[Array[Double]]
val zombifiedWalking = Val[Array[Double]]
val zombifiedRunning = Val[Array[Double]]


val model =
  ScalaTask("""
    import _root_.zombies.ode._
  
    val (humansWalkingSampled, humansRunningSampled, zombifiedWalkingSampled, zombifiedRunningSampled) = Model.run(
      panic0 = panic0, staminaH = staminaH, hunt0 = hunt0, staminaZ = staminaZ, inf0 = inf0,
      out0 = out0, fightback = fightback, die0 = die0,
      statesInit = statesInit,
      tMax = tMax
    )
    
    val humansWalking = humansWalkingSampled.toArray
    val humansRunning = humansRunningSampled.toArray
    val zombifiedWalking = zombifiedWalkingSampled.toArray
    val zombifiedRunning = zombifiedRunningSampled.toArray
  """) set (
    inputs += (panic0, staminaH, hunt0, staminaZ, inf0),
    inputs += (out0, fightback, die0),
    outputs += (humansWalking, humansRunning, zombifiedWalking, zombifiedRunning),
    outputs += (panic0, hunt0, out0, fightback, die0),
    
    // ODE parameters
    panic0 := 9.262827265276236,
    staminaH := 0.7865921714184576,
    hunt0 := 46.76556677416052,
    staminaZ := 0.3145364928802022,
    inf0 := 0.020763992319483907,
    out0 := 0.0,
    fightback := 0.0,
    die0 := 0.0,
    // Initial conditions
    statesInit := Vector(250.0, 0.0, 0.0, 4.0),
    // Time steps
    t0 := 1,
    dt := 0.01,
    tMax := 500,
    tWarp := 484,
    
    plugins += pluginsOf(zombies.ode.Model)
)


model hook display